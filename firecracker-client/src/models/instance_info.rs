/*
 * Firecracker API
 *
 * RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. The transport medium is a Unix Domain Socket.
 *
 * The version of the OpenAPI document: 1.4.1
 * Contact: compute-capsule@amazon.com
 * Generated by: https://openapi-generator.tech
 */

/// InstanceInfo : Describes MicroVM instance information.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InstanceInfo {
    /// Application name.
    #[serde(rename = "app_name")]
    pub app_name: String,
    /// MicroVM / instance ID.
    #[serde(rename = "id")]
    pub id: String,
    /// The current detailed state (Not started, Running, Paused) of the Firecracker instance. This value is read-only for the control-plane.
    #[serde(rename = "state")]
    pub state: State,
    /// MicroVM hypervisor build version.
    #[serde(rename = "vmm_version")]
    pub vmm_version: String,
}

impl InstanceInfo {
    /// Describes MicroVM instance information.
    pub fn new(app_name: String, id: String, state: State, vmm_version: String) -> InstanceInfo {
        InstanceInfo {
            app_name,
            id,
            state,
            vmm_version,
        }
    }
}

/// The current detailed state (Not started, Running, Paused) of the Firecracker instance. This value is read-only for the control-plane.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "Not started")]
    NotStarted,
    #[serde(rename = "Running")]
    Running,
    #[serde(rename = "Paused")]
    Paused,
}

impl Default for State {
    fn default() -> State {
        Self::NotStarted
    }
}

